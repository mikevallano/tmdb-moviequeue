---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/person/884?api_key=3fb5f9a5dbd80d943fdccf6bd1e7f188
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 11 Nov 2021 00:55:37 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - dec25234b3dc0bd0dc371d526804efee5ce4efac
      X-Memc-Age:
      - '12809'
      X-Memc-Expires:
      - '2895'
      Etag:
      - W/"d8cca08a178ae8f9e719339547766238"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 5f1f38c95605e9427bedb183f565ce23.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - Sf80QZjQvxzoT4Lgy6Kv6xsDz6NmKLaRfB5QebgKWSXQ0keyXzpwSw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhZHVsdCI6ZmFsc2UsImFsc29fa25vd25fYXMiOlsi5Y+y6JKC5aSrwrfluIPopb/lr4YiLCLYs9iq2YrZgSDYqNmI2LTZitmF2YoiLCLsiqTti7DruIwg67aA7IS466+4Iiwi44K544OG44Kj44O844O044O744OW44K344Kn44OfIiwi0KHRgtC40LIg0JHRg9GI0LXQvNC4Iiwi4Liq4LiV4Li14LifIOC4muC4ueC5gOC4i+C4oeC4tSIsIlN0ZXZlbiBWaW5jZW50IEJ1c2NlbWkiXSwiYmlvZ3JhcGh5IjoiQW4gQW1lcmljYW4gYWN0b3IsIHdyaXRlciBhbmQgZGlyZWN0b3IuIEhlIHdhcyBib3JuIGluIEJyb29rbHluLCBOZXcgWW9yaywgdGhlIHNvbiBvZiBEb3JvdGh5LCB3aG8gd29ya2VkIGFzIGEgaG9zdGVzcyBhdCBIb3dhcmQgSm9obnNvbidzLCBhbmQgSm9obiBCdXNjZW1pLCBhIHNhbml0YXRpb24gd29ya2VyIGFuZCBLb3JlYW4gV2FyIHZldGVyYW4uIEJ1c2NlbWkncyBmYXRoZXIgd2FzIFNpY2lsaWFuIEFtZXJpY2FuIGFuZCBoaXMgbW90aGVyIElyaXNoIEFtZXJpY2FuLiBIZSBoYXMgdGhyZWUgYnJvdGhlcnM6IEpvbiwgS2VuLCBhbmQgTWljaGFlbC4gQnVzY2VtaSB3YXMgcmFpc2VkIFJvbWFuIENhdGhvbGljLlxuXG5CdXNjZW1pIGhhcyBzdGFycmVkIGFuZCBzdXBwb3J0ZWQgaW4gc3VjY2Vzc2Z1bCBIb2xseXdvb2QgYW5kIGluZGllIGZpbG1zLCBpbmNsdWRpbmcgUGFydGluZyBHbGFuY2VzICgxOTg2KSwgTmV3IFlvcmsgU3RvcmllcyAoMTk4OSksIE15c3RlcnkgVHJhaW4gKDE5ODkpLCBSZXNlcnZvaXIgRG9ncyAoMTk5MiksIFB1bHAgRmljdGlvbiAoMTk5NCksIERlc3BlcmFkbyAoMTk5NSksIENvbiBBaXIgKDE5OTcpLCBBcm1hZ2VkZG9uICgxOTk4KSwgVGhlIEdyZXkgWm9uZSAoMjAwMSksIEdob3N0IFdvcmxkICgyMDAxKSwgQmlnIEZpc2ggKDIwMDMpLCBMZWFuIG9uIFBldGUgKDIwMTcpLCBhbmQgVGhlIERlYXRoIG9mIFN0YWxpbiAoMjAxNykuIEhlIGlzIGFsc28ga25vd24gZm9yIGhpcyBhcHBlYXJhbmNlcyBpbiBtYW55IGZpbG1zIGJ5IENvZW4gYnJvdGhlcnM6IE1pbGxlcidzIENyb3NzaW5nICgxOTkwKSwgQmFydG9uIEZpbmsgKDE5OTEpLCBUaGUgSHVkc3Vja2VyIFByb3h5ICgxOTk0KSwgRmFyZ28gKDE5OTYpLCBhbmQgVGhlIEJpZyBMZWJvd3NraSAoMTk5OCkuIEJ1c2NlbWkgcHJvdmlkZXMgdGhlIHZvaWNlIG9mIFJhbmRhbGwgQm9nZ3MgaW4gdGhlIE1vbnN0ZXJzLCBJbmMuIGZyYW5jaGlzZS5cblxuRnJvbSAyMDEwIHRvIDIwMTQsIGhlIHBvcnRyYXllZCBFbm9jaCBcIk51Y2t5XCIgVGhvbXBzb24gaW4gdGhlIGNyaXRpY2FsbHkgYWNjbGFpbWVkIHNlcmllcyBCb2FyZHdhbGsgRW1waXJlLCB3aGljaCBlYXJuZWQgaGltIHR3byBTY3JlZW4gQWN0b3JzIEd1aWxkIEF3YXJkcywgYSBHb2xkZW4gR2xvYmUsIGFuZCB0d28gbm9taW5hdGlvbnMgZm9yIGFuIEVtbXkgQXdhcmQuIEhlIG1hZGUgaGlzIGRpcmVjdG9yaWFsIGRlYnV0IGluIDE5OTYsIHdpdGggVHJlZXMgTG91bmdlLCBpbiB3aGljaCBoZSBhbHNvIHN0YXJyZWQuIE90aGVyIHdvcmtzIGluY2x1ZGUgQW5pbWFsIEZhY3RvcnkgKDIwMDApLCBMb25lc29tZSBKaW0gKDIwMDUpLCBhbmQgSW50ZXJ2aWV3ICgyMDA3KS5cblxuQnVzY2VtaSBoYXMgb25lIHNvbiwgTHVjaWFuLCB3aXRoIGhpcyB3aWZlIEpvIEFuZHJlcy4iLCJiaXJ0aGRheSI6IjE5NTctMTItMTMiLCJkZWF0aGRheSI6bnVsbCwiZ2VuZGVyIjoyLCJob21lcGFnZSI6bnVsbCwiaWQiOjg4NCwiaW1kYl9pZCI6Im5tMDAwMDExNCIsImtub3duX2Zvcl9kZXBhcnRtZW50IjoiQWN0aW5nIiwibmFtZSI6IlN0ZXZlIEJ1c2NlbWkiLCJwbGFjZV9vZl9iaXJ0aCI6Ik5ldyBZb3JrIENpdHksIE5ldyBZb3JrLCBVU0EiLCJwb3B1bGFyaXR5IjoxNC4wOTQsInByb2ZpbGVfcGF0aCI6Ii9sUUtkSE14ZlljQ0JPdndSS0JBeFBaVk50a2cuanBnIn0=
    http_version: 
  recorded_at: Thu, 11 Nov 2021 00:55:36 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/person/884/movie_credits?api_key=3fb5f9a5dbd80d943fdccf6bd1e7f188
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 11 Nov 2021 00:55:37 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - f7026ff2dcc8a8567d9eceea47c7a46fa48f105c
      X-Memc-Age:
      - '10433'
      X-Memc-Expires:
      - '4673'
      Etag:
      - W/"25eb750d98e630cf61aab6a46399914c"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 c71ccd68c5d86c8d71f83589710f4fa5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - nNZmOi2gMoyG4LLzhURT2wbRHM73i3KZcpJpxjaZcmPmdxUgck9VWw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 11 Nov 2021 00:55:37 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/person/884/tv_credits?api_key=3fb5f9a5dbd80d943fdccf6bd1e7f188
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 11 Nov 2021 00:55:37 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 623e5373e06d7229e7a390f4b236b9f24927ce3a
      X-Memc-Age:
      - '11089'
      X-Memc-Expires:
      - '5045'
      Etag:
      - W/"87a1e0ae4a843df72b1188ad265d0af1"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 56a488589681428d031d729dbc238a07.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DFW53-C1
      X-Amz-Cf-Id:
      - F5PIlrabZl_6_YXt-fDyFl8EilAi_gSXXElV5PGV6RVs2g4DY7ywGw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 11 Nov 2021 00:55:37 GMT
recorded_with: VCR 5.0.0
